generator client {
    provider = "cargo run --bin prisma"
    output = "../src/prisma.rs"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

// # -------------------------------------------------- #
//                  Guild/User
model Guild {
    id                  String           @id @map("_id")
    name                String
    cases               UserPunishment[] @relation
    commandsPermissions CommandPermissions[] @relation
}

model User {
    id                  String  @id @map("_id")
    isModerator         Boolean

    appliedPunishments  UserPunishment[] @relation("AppliedPunishment")
    sufferedPunishments UserPunishment[] @relation("SufferedPunishment")
}

// # -------------------------------------------------- #
//                  Config
model CommandPermissions {
    commandName String  @id @map("_id")
    allowed     String[] @default(["private"])
    minViewer   String @default("private")

    guildId     String
    guild       Guild @relation(fields: [guildId], references: [id])
}

// # -------------------------------------------------- #
//                  Autoreport
model AutoReportPresetInfo {
    uuid                String  @id @default(uuid()) @map("_id")
    name                String  @unique
    chatID              String
    logChatID           String
    emoji               String
    emojiID             String?
    customEmoji         Boolean
    reactNewMessages    Boolean

    info                AutoReportPresetData? @relation
}

model AutoReportPresetData {
    uuid            String   @id @default(uuid()) @map("_id")
    name            String   @unique
    alreadyReported String[]

    infoUUID        String                @unique
    data            AutoReportPresetInfo? @relation(fields: [infoUUID], references: [uuid])
}

// # -------------------------------------------------- #
//                  Punishment
enum PunishmentType {
    kick
    warn
    mute
    ban
    unkick
    unwarn
    unmute
    unban
}

model UserPunishment {
    case        Int      @id @map("_id")
    createdAt   DateTime
    expiresAt   DateTime
    reason      String
    type        PunishmentType
    undone      Boolean

    moderatorId String @unique
    moderator   User   @relation("AppliedPunishment", fields: [moderatorId], references: [id])

    userId      String @unique
    user        User   @relation("SufferedPunishment", fields: [userId], references: [id])

    guildId     String @unique
    guild       Guild  @relation(fields: [guildId], references: [id])
}
